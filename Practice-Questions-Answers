DQL QUESTIONS :                                                        

1.
SELECT NAME, SALARY
FROM EMPLOYEE
WHERE SALARY > 50000;

2.
SELECT CUSTOMER
FROM CUSTOMERS
WHERE CITY = "CHENNAI";

3.
SELECT PRODUCT_NAME
FROM PRODUCTS
ORDER BY PRODUCT_PRICE DESC
LIMIT 5;

4.
SELECT ORDER_DETAILS
FROM ORDERS
WHERE ORDERS_DATE BETWEEN 'X-DATE' AND '√ù-DATE'

5.
SELECT EMPLOYEE_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_NAME LIKE 'A%';

6.
SELECT CUSTOMER_NAME, COUNT(*) AS TOTAL_ORDERS
FROM ORDERS
GROUP BY ORDER.CUSTOMER_NAME;

7.
SELECT PRODUCT_NAME, PRODUCT_CATEGORY
FROM PRODUCTS
WHERE CATEGORY IN ("ELECTRONICS" , "BOOKS");      OR    WHERE CATEGORY = 'ELECTRONICS' OR CATEGORY = 'BOOKS';

8.
SELECT DISTINCT JOB_TITLES
FROM EMPLOYEES;

9.
SELECT AVG(SALARY)
FROM EMPLOYEES
GROUP BY EMPLOYEE_DEPT;

10.


DDL :

1.
CREATE TABLE STUDENTS ( STUDENT_ID VARCHAR(25) PRIMARY KEY,
NAME VARCHAR(25) NOT NULL, AGE INT(3), DEPARTMENT VARCHAR(30));

2.
ALTER TABLE EMPLOYEES 
ADD JOINING_DATE DATE;

3.
RENAME TABLE ORDER TO CUSTOMER_ORDERS;

4.
DROP TABLE PROJECTS;

5.
ALTER TABLE CONTACTS
MODIFY ...;


6.
ALTER TABLE STAFF 
DROP COLUMN SALARY;

7.
CREATE TABLE PRODUCTS( PRODUCT_ID VARCHAR(25) PRIMARY KEY);

8.
ALTER TABLE ORDERS
ADD CONSTRAINTS FK_CUSTOMER
FOREIGN KEY(CUSTOMER_ID)
REFERENCE CUSTOMERS(CUSTOMERS_ID);

9.
CREATE TABLE DEPARTMENTS (DEPT_ID INT(15) PRIMARY KEY,
DEPT_NAME VARCHAR(25));

10.
TRUNCATE TABLE LOGS;

