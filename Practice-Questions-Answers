DQL QUESTIONS :                                                        

1.
SELECT NAME, SALARY
FROM EMPLOYEE
WHERE SALARY > 50000;

2.
SELECT CUSTOMER
FROM CUSTOMERS
WHERE CITY = "CHENNAI";

3.
SELECT PRODUCT_NAME
FROM PRODUCTS
ORDER BY PRODUCT_PRICE DESC
LIMIT 5;

4.
SELECT ORDER_DETAILS
FROM ORDERS
WHERE ORDERS_DATE BETWEEN 'X-DATE' AND 'Ý-DATE'

5.
SELECT EMPLOYEE_NAME
FROM EMPLOYEES
WHERE EMPLOYEE_NAME LIKE 'A%';

6.
SELECT CUSTOMER_NAME, COUNT(*) AS TOTAL_ORDERS
FROM ORDERS
GROUP BY ORDER.CUSTOMER_NAME;

7.
SELECT PRODUCT_NAME, PRODUCT_CATEGORY
FROM PRODUCTS
WHERE CATEGORY IN ("ELECTRONICS" , "BOOKS");      OR    WHERE CATEGORY = 'ELECTRONICS' OR CATEGORY = 'BOOKS';

8.
SELECT DISTINCT JOB_TITLES
FROM EMPLOYEES;

9.
SELECT AVG(SALARY)
FROM EMPLOYEES
GROUP BY EMPLOYEE_DEPT;

10.



DDL :

1.
CREATE TABLE STUDENTS ( STUDENT_ID VARCHAR(25) PRIMARY KEY,
NAME VARCHAR(25) NOT NULL, AGE INT(3), DEPARTMENT VARCHAR(30));

2.
ALTER TABLE EMPLOYEES 
ADD JOINING_DATE DATE;

3.
RENAME TABLE ORDER TO CUSTOMER_ORDERS;

4.
DROP TABLE PROJECTS;

5.
ALTER TABLE CONTACTS
MODIFY ...;

6.
ALTER TABLE STAFF 
DROP COLUMN SALARY;

7.
CREATE TABLE PRODUCTS( PRODUCT_ID VARCHAR(25) PRIMARY KEY);

8.
ALTER TABLE ORDERS
ADD CONSTRAINTS FK_CUSTOMER
FOREIGN KEY(CUSTOMER_ID)
REFERENCE CUSTOMERS(CUSTOMERS_ID);

9.
CREATE TABLE DEPARTMENTS (DEPT_ID INT(15) PRIMARY KEY,
DEPT_NAME VARCHAR(25));

10.
TRUNCATE TABLE LOGS;




DML :

1.
INSERT INTO STUDENTS(STUDENT_ID, STUDENT_NAME, STUDENT_AGE, STUDENT_DEPT)
VALUES (5101,'ARJUN',21,'CSE');

2.
UPDATE EMPLOYEE
SET SALARY = 75000
WHERE EMP_ID = 'E1234'

3.
DELETE FROM LOGS
WHERE LOG_TYPE = 'TEMPORARY';

4.
INSERT INTO PRODUCT(PROD_ID,PROD_NAME,PROD_PRICE)
VALUES (P1234,'SOAP',20),
(P1235,'SWEET',50),
(P1236,'BRUSH' 25);

5.
UPDATE PRODUCT_PRICE
SET PRODUCT_PRICE = PROD_PRICE * 1.10;

6.
UPDATE STUDENTS
SET DEPT = 'ECE'
WHERE DEPT = 'IT'

7.
SELECT CUSTOMERS O
LEFT JOIN ORDERS O
WHERE O.CUSTOMERS_ID IS NULL;

DELETE FROM CUSTOMERS
WHERE CUSTOMER_ID NOT IN (
    SELECT CUSTOMER_ID FROM ORDERS;
);

8.
INSERT INTO ORDERS(ORD_ID,ORD_NAME,ORD_PRICE)
SELECT (CART_ID,CART_NAME,CART_PRICE)
FROM CART;

9.
UPDATE EMPLOYEE
SET STATUS = 'INACTIVE'
WHERE LOGIN_DATE > '2024-12-31';

10.
INSERT INTO EMPLOYEES (EMP_ID,NAME,EMAIL)
VALUES ('E123',KIRAN,KIRAN@G.COM)
ON DUPLICATE KEY UPDATE EMAIL = 'KIRAN123@G.COM';

